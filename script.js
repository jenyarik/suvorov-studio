$(document).ready(function () {
    const toggleChat = document.querySelector('.chatbot-toggle');
    const chatWindow = document.querySelector('.chatbot-window');
    const closeChat = document.querySelector('.chatbot-close');
    const inputField = document.getElementById('chatbotInput');
    const messagesContainer = document.getElementById('chatbotMessages');
    const sendButton = document.querySelector('.chatbot-send');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞
    toggleChat.addEventListener('click', () => {
        chatWindow.classList.toggle('active');
    });
    closeChat.addEventListener('click', () => {
        chatWindow.classList.remove('active');
    });

    function addMessage(text, sender) {
        const msg = document.createElement('div');
        msg.className = 'message ' + sender;
        msg.textContent = text;
        messagesContainer.appendChild(msg);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    async function botReply(userMessage) {
        try {
            const response = await fetch('https://tattoo-studio-bot.onrender.com/api/message', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ text: userMessage, userId: 1 })
            });

            if (!response.ok) {
                throw new Error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
            }

            const data = await response.json();
            addMessage(data.response, 'bot');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            addMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'bot');
        }
    }

    const sendMessage = () => {
        const message = inputField.value.trim();
        if (message) {
            addMessage(message, 'user');
            inputField.value = '';
            botReply(message);
        } else {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.");
        }
    };

    sendButton.addEventListener('click', sendMessage);

    inputField.addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –ß–∞—Ç-–±–æ—Ç "–°—Ç—É–¥–∏–∏ –°—É–≤–æ—Ä–æ–≤–∞".<br>
–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å:<br>
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π:   –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è [–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] [email] [–ø–∞—Ä–æ–ª—å] [—Ç–µ–ª–µ—Ñ–æ–Ω]<br>
- –í—Ö–æ–¥–æ–º –≤ —Å–∏—Å—Ç–µ–º—É: –≤–æ–π—Ç–∏ [email] [–ø–∞—Ä–æ–ª—å]<br>
- –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–º —Å–ø–∏—Å–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤: –º–∞—Å—Ç–µ—Ä–∞<br>
- –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–º —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥: —É—Å–ª—É–≥–∏<br>
- –ó–∞–ø–∏—Å—å—é –Ω–∞ –ø—Ä–∏–µ–º: –∑–∞–ø–∏—Å–∞—Ç—å—Å—è [–¥–∞—Ç–∞] [–≤—Ä–µ–º—è] [–º–∞—Å—Ç–µ—Ä] [—É—Å–ª—É–≥–∞]<br>
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É!`;

    addMessage(welcomeMessage, 'bot');
});
    // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —É—Å–ª—É–≥ ---
    const serviceCards = document.querySelectorAll('.service-card');

    serviceCards.forEach(card => {
        const header = card.querySelector('.service-header');
        const content = card.querySelector('.service-content');

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
        header.addEventListener('click', function() {
            card.classList.toggle('active');
            content.classList.toggle('active');
        });
    });

document.addEventListener('DOMContentLoaded', function() {
    const mastersContainer = document.querySelector('.masters-container');
    const modal = document.getElementById('worksModal');
    const modalMasterName = document.getElementById('modal-master-name');
    const modalWorksCarouselBody = document.getElementById('modal-works-carousel-body');
    const closeBtn = document.querySelector('.close');
    const carouselPrevBtn = modal.querySelector('.carousel-prev');
    const carouselNextBtn = modal.querySelector('.carousel-next');
    const carouselInfoCurrent = modal.querySelector('.carousel-info-current');
    const carouselInfoTotal = modal.querySelector('.carousel-info-total');

    let currentSlide = 0;
    let slides = [];

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function openModal(masterElement) {
        const masterName = masterElement.dataset.masterName;
        const worksData = JSON.parse(masterElement.dataset.works);

        if (worksData && worksData.length) {
            modalMasterName.textContent = masterName;
            modalWorksCarouselBody.innerHTML = ''; // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–ª–∞–π–¥—ã
            slides = []; // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Å–ª–∞–π–¥–æ–≤

            worksData.forEach(work => {
                const slide = document.createElement('div');
                slide.classList.add('carousel-slide');

                const img = document.createElement('img');
                img.src = work;
                img.alt = `–†–∞–±–æ—Ç–∞ –º–∞—Å—Ç–µ—Ä–∞ ${masterName}`;

                slide.appendChild(img);
                modalWorksCarouselBody.appendChild(slide);
                slides.push(slide);
            });

            currentSlide = 0;
            updateCarousel();
            updateCarouselInfo();

            modal.classList.add('show');
            modal.style.display = 'flex';

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤
            carouselInfoTotal.textContent = slides.length;

        } else {
            alert("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞.");
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeModal() {
        modal.classList.remove('show');
        modal.style.display = 'none';
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞
    function updateCarousel() {
        const translateX = -currentSlide * 100 + '%';
        modalWorksCarouselBody.style.transform = 'translateX(' + translateX + ')';
        updateCarouselInfo();
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —Å–ª–∞–π–¥–µ
    function updateCarouselInfo() {
        carouselInfoCurrent.textContent = currentSlide + 1;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—É—Å–µ–ª–∏
    carouselPrevBtn.addEventListener('click', function() {
        currentSlide = (currentSlide - 1 + slides.length) % slides.length;
        updateCarousel();
    });

    carouselNextBtn.addEventListener('click', function() {
        currentSlide = (currentSlide + 1) % slides.length;
        updateCarousel();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    mastersContainer.addEventListener('click', function(event) {
        const button = event.target.closest('.show-works-button');
        if (button) {
            const masterElement = button.closest('.master');
            openModal(masterElement);
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.addEventListener('click', closeModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            closeModal();
        }
    });
});

